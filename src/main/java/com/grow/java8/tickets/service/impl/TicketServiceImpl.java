package com.grow.java8.tickets.service.impl;import com.grow.java8.tickets.dao.TicketDAO;import com.grow.java8.tickets.data.Ticket;import com.grow.java8.tickets.service.TicketService;import com.grow.java8.tickets.util.Util;import java.util.Optional;public abstract class TicketServiceImpl implements TicketService {    private static final String BUYER_FOR_ERROR = "exception";    public Ticket sellTicket(String buyer) {        Optional<Ticket> ticket = getTicketDAO().getLastFree();        ticket.get().setBuyer(buyer);        getTicketDAO().setTicket(ticket.get());        Util.pause(6000);        if (BUYER_FOR_ERROR.equals(buyer)){            throw new IllegalArgumentException();        }        return ticket.get();    }    public Long getCountSold() {        return getTicketDAO().getCountSold();    }    protected abstract TicketDAO getTicketDAO();}